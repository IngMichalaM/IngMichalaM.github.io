
body {
    background: #B0B0B0; 
    /*display: flex;*/
    margin-top: 5%; /*it is now vertically 50% , but works well*/
    font-family: 'Courgette', cursive;

}

/* The background blur shadowy color was initially done within the "section" element
using the radial-gradient ellipse. Doing so, the "section" element needed to be created.
If the gradient was applied on  the body, it was moving with the background while 
changing the size of the window and not staying in the background of the <div> element of the photo

Now I try the shadow of the box <div> element with hte arrowas and the photo.
It can be blured and probably done in the way that it is all way around.
Then the "section" element would not be necessary at all.

The box-shadow needs to be inside the box around which it will appera - so the div element

!! works great !!
box-shadow: 0px 0px 200px 10px  black; - exactly what I was trying to do using the radial gradient. 
But this is much easier. 
Lets try to get rid of the "section" which is now not needed.
*/    
    
.whole_galery {
    /* this div contains the content itself - the pictures, arrow and thumbnails */
    width: 800px;
    height: 450px;
    background: white;
    
    /*position: absolute;*/
    margin: 0 auto 0 auto; 
    /* the "auto" center it horiontally and 
    the 200px vertically */
    /*border: solid blue 5px; */
    display: flex;
    justify-content: space-around;
    /*space-between; center*/
    /*align-items: center;*/
    box-shadow: 0px 0px 200px 10px  black;
    /*    The definition of the box-shadow is:
    offset-x | offset-y | blur-radius | spread-radius | color */
   } 

.image_and_text {
    /*border: green solid 10px; */
    width: 100%; 
    /*display: flex;  */
    /*flex-grow: 20;*/
    /*position: absolute;*/
    position: relative; /* relative to its parent box*/ 
}

#photo {
    /* photo is id of the central image*/
    object-fit: cover ; 
    /*with cover it maight be cut to fill the whole container */
    /*contain; for this wite spaces arround occur, but the aspect ration stays as original and the image is not cut*/
    width: 100%;
    height: 100%;
   /*   position: relative;then its description and title will be absolute to this*/
}  

.arrow {
    /* class of the div of the left and right arrows */
    /*background: yellow; */
   /* margin: auto 35px auto 5px;*/
   /* margin: auto 0px auto 0px;*/
    /*border: red solid 1px;  
    padding-left: 15px;*/
    /*padding-left: 15px;*/
    /*display: flex;  
    flex-grow: 1;*/
    width: 10%; 
    
}

/* left and right are classes of the div containers of the left and right arrows">*/


#left-arrow {
    /* #left-arrow { id of the left image arrow*/
    background: white; 
    /* contain: The image keeps its original aspect ratio, but resized so that the longest of either the height or width can fit in the given dimensions.*/
    object-fit: contain;
    width: 100%;
    height: 100%;
    transform: rotate(180deg);
    /*padding-top: 150px;*/
    /*padding-left: 10px;
    padding-right: 10px;
    margin: 0 auto 0 auto; 
    margin: auto 0px auto 0px; 
       */

}

 #right-arrow {
        /*- id of the right image arrow*/
        object-fit: contain;
        width: 100%;
        height: 100%;   
        background: white;  
}


.arrow:hover {
    /*background: rgb(177,177,180);
    background: linear-gradient(0deg, rgba(177,177,180,1) 63%, rgba(83,83,83,1) 100%);*/
    /*background: #E0E0E0;*/
    opacity: 0.5; 
}

:root {
    --odrazka: 50px;    
  }

/*
.right {
    transform: rotate(0deg);
    box-shadow: 10px 10px; 
}

.left {
    transform: rotate(180deg);
    box-shadow: 10px 10px; 
}*/

.gray-container {
    /*background-color: rgba(255,255,255, 1);   */
   background-color: rgba(0,0,0, 0.5); /* 000 is black, opacity goes only to the background, not the text <h1> and <p>*/   
    /*background-color: black; */
    width: 100%;
    /*height: 100px; */
    /*overflow: scroll;*/
    /*width: 700px;   no wixed widht , we want it width s the picture */
    /* height:50px; cannot be fixed, needs to be adjusted based on the text */
    padding-top: 3px;
    padding-bottom: 3px;
    /*border: 2px solid white; */
    position: absolute; /*its paremt <div> contaner has "position: relative;" */
    /*position: relative;*/
    bottom: 0px;        
   /* left: var(--odrazka);*/
    /*left: 50px;*/
    /* opacity: 0; this applays 
     the opacity on the text as well 
     this we dont want */
}

#photo-title {
    /*color: red;*/
    color:white ;
    padding-left: 15px;
    /*padding-left: var(--odrazka);*/
    margin:0px; 
    padding-bottom: 0px;
}

#photo-description {
    /*color: green;*/
    color: #E0E0E0; /*#C0C0C0;;light gray */
    padding-left: 15px;
    margin: 3px; 
}

.thumbnails_container {
    /* class of a <div> class, container for the thumbnails */
    /*border: 1px solid red;*/
    /*width: 500 px;
    height: 50px; */
    /*width: 800px;*/
    /*position: fixed;*/
    /*top: 650px; needs to be from "top" as the other <div> container*/
    /*left: 300px;*/
    display: flex; 
    justify-content: space-around;
    margin-top: 100px;
}

.each_thumbnail_div {
    /*the class of <div> container for eahc thumbnail and its title*/
        position: relative;
        /*border: green 3px solid;*/
        width: 150px; /* Set a small width */
        height: 100px;  
        }

/* class for the <img> with the thumbnails*/
.thumbnail {    
  /*  border: 1px solid #ddd; */
  border: 1px solid #ddd; 
    border-radius: 4px;
    padding: 5px; 
    object-fit: cover ; 
    width: 90%;
    height: 90%;
    /* border  default will be done by the script /* Gray border */
 /*with cover it maight be cut to fill the whole container */
    /*contain; for this wite spaces arround occur, but the aspect ration stays as original and the image is not cut*/
  }
  
  /* Add a hover effect (blue shadow) */
  /* the thumbnail here is only the image*/
  .thumbnail:hover {
    box-shadow: 0 0 10px 1px rgba(0, 0, 0, 1);
  }

  /* not in use 
  .highlighted_thumbnail {
      /*when the photo is displayed, its thumbnail is highlighted
        but when the thumbnail is hooverd - it has the hoover property */
   /* border: red solid 5px;
}*/

.thumbnail_title {
    /* the class of the title of the photo assign to the thumbnail */
    /*display:  none; /*- none will be the default state - hidden. Only when hoover will it appear    
    /*background: grey;*/
    color: white;
    border-radius: 10px;    
    padding: 2px;
    position: relative;
    height: 40px; 
    /*top: -180px;*/
    bottom: 175px;
    left: 0px;
    /*margin: 0 auto 0 auto;  /*not working */
    margin-left: 5px;
    margin-top: 5px; 
    border: 2px solid #a1a1a1; 
    text-align: center;
    /*opacity: 0.3;*/
    visibility: hidden;  
    /*visibility: visible;*/
    }
    

     .each_thumbnail_div:hover .thumbnail_title {
        visibility: visible; 
        /*
          box-shadow: 0 0 10px 1px rgb(209, 19, 19);
          color: red;
          border: purple 5px solid; */
    }
    

    .thumbnail_title:after {
      content:"";
      border-color: #a1a1a1 transparent transparent transparent;
      border-style:solid;
      border-width: 15px;
      width:0;
      height:0;
      position:absolute;
      bottom:-29px;
      left:20px
  }

    /*
    .thumbnail_title:hoover {
        /*this is the div of the im+title + the title of the thumbnail*/
        /* display: block; not really working  */
        
      /*  box-shadow: 0 0 10px 1px rgba(0, 0, 0, 1);
    }*/
    
    
/*
div {
    height: 200px;
    width: 400px;
    /* background-image: radial-gradient(circle,rgb(0, 0, 0, 1), rgba(0,0,0,0));*/
    /*background-image: radial-gradient(ellipse ,rgb(0, 0, 0, 1), rgba(0,0,0,0));*/
    /*background-image: radial-gradient(ellipse, #404040 45%, #E0E0E0);

    /* background-image: linear-gradient(45deg, rgb(0, 0, 0, 1),rgba(0,0,0,0))*/
    
    
    
      
    /* 0 - full transparency, 1 - full color
      /* #CC99FF, #FF66FF);
     # purple CC99FF, #FF66FF - pinky 
    light blue: 9999FF
    light purple: CC99FF
    #E0E0E0 - light grey
     #404040 - dark grey
 
}
}*/
